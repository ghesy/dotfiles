#!/bin/sh
# download hblock's sources in parallel using aria2, then apply them.

# config
tmp="${XDG_RUNTIME_DIR:-/var/run}/hblock"
sources=/etc/hblock/sources.list
state=/var/tmp/hblock-state

# function to print and log error and exit
die() {
    printf '%s\n' "hblock-aria2: $*" >&2
    [ "$log" = true ] && logger -t hblock-aria2 "$*"
    exit 1
}

# check dependencies
for prog in aria2c hblock nmcli; do
    command -v $prog >/dev/null || die $prog is not installed.
done

# process options
unset verbose force log
while getopts vfl opt; do case $opt in
    v) verbose=true ;; f) force=true ;; l) log=true ;; ?) exit 1 ;;
esac; done

# exit if this script was last run less than 24 hours ago
[ "$force" != true ] && test -n "$(find $state -mtime -1 2>/dev/null)" && exit 0

# exit if we don't have internet
nmcli -g general.ip4-connectivity dev show | grep -q full ||
    die no internet connectivity.

# cleanup tmp now and upon exit
rm -rf $tmp
trap 'rm -rf $tmp' EXIT

# download the hosts files
aria2c \
    ${verbose:---quiet} --no-conf --dir=$tmp --input-file=$sources \
    --min-split-size=1M --max-concurrent-downloads=10  \
    --max-connection-per-server=5 ||
    die failed downloading the files.

# remove aria2 state files
rm -f $tmp/*.aria2

# install the hosts files using hblock
printf 'file://%s\n' $tmp/* | hblock ${verbose:---quiet} --sources - ||
    die failed applying the hosts.

# update the state file
date -Isec > $state
chmod -f 666 $state
