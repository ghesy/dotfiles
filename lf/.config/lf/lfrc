set shell bash
set shellopts '-u'
set ifs "\n"
set mouse
set drawbox
set nopreview
set period 1
set ratios 1
set dircounts
set timefmt   "2006-01-02 15:04"
set errorfmt  "\033[31m%s\033[0m"
set promptfmt "\033[2m%d"
set hiddenfiles ".*:$RECYCLE.BIN:System Volume Information"

cmd scrolloff set scrolloff 10
scrolloff

set previewer ~/.config/lf/previewer
set cleaner sxipc

# ============
# = mappings
# ============

map ~ cd ~
map . set hidden!
map * push :glob-select<space>
map P paste simple
map gh
map g top
map zz center
map L openall
map E extract
map a push :archive<space>
map U &termopen
map D push :trash<space>
map X !$f
map m mkdir
map <c-n> togglenum
map <c-f> finder
map W &wallpaper $f
map V push $$EDITOR<space>
map R &dragon-drag-and-drop -a -x $fx
map S getdirsize
map Y &printf %s $f | xclip -selection clipboard # copy file's path
map o &readlink -f -- $f | lfselect # follow symlinks
map H push :mark-load<enter>' # jump back to previous dir
map K push hkl # go to the previous parent dir
map J push hjl # go to the next parent dir

# renaming
map b bulkrename
map A rename
map I push :rename<enter><c-a>
map i push :rename<enter><a-b><a-b><a-f> # before extention
map C push :rename<enter><c-u> # new rename

# toggle the preview pane by pressing 't' or mouse-click
map t preview-on
map <m-1> push t
cmd preview-on push :set<space>ratios<space>1:1;set<space>preview;<space>load;map<space>t<space>preview-off<enter>
cmd preview-off push :set<space>nopreview;set<space>ratios<space>1;map<space>t<space>preview-on;<space>&sxipc<enter>

# mouse mappings
map <m-down> down
map <m-up> up

# remove bookmark maps
map "'"
map '"'

# avoid 'unknown mapping' error
map <esc> :echo
map <tab> :echo

# ============
# = commands
# ============

cmd q quit
cmd bulkrename $realpath -s --relative-base=$PWD -- $fx | vidir -v -
cmd archive $apack $1 $(realpath -s --relative-base=$PWD -- $fx)
cmd getdirsize !printf '\e[?1049h\e[H... '; du -sh 2>/dev/null
cmd togglenum push :set<space>number!;set<space>relativenumber!<enter>

cmd open $~/.config/lf/opener
cmd openall $~/.config/lf/opener -a

cmd mkdir %{{
    printf ' '
    read dir
    mkdir -p -- $dir
    lf -remote 'send load'
    printf '%s\n' $dir | lfselect
}}

cmd trash &{{
    lf -remote "send $id echo Trashing..."
    msg=$(mktemp)
    trap 'rm -f "$msg"' EXIT
    if trash-put $fx >$msg 2>&1; then
        lf -remote "send $id echo Trashing Done."
    else
        lf -remote "send $id !printf '\e[?1049h\e[H'; cat \"$msg\""
        lf -remote "send $id echo Trashing Failed."
    fi
    lf -remote 'send load'
}}

cmd delete ${{
    printf '\e[?1049h\e[H'
    echo 'Permanently Deleting Files:'; echo
    printf '  %s\n' $fx ""
    read -p 'Delete? [y/N] ' ans
    case "$ans" in y|Y) rm -rfv --one-file-system -- $fx ;;
    esac || read -p 'Press enter to continue'
}}

cmd finder ${{
    f=$(finder) || exit
    case $(basename -- $f) in
        .*) lf -remote "send $id set hidden" ;;
    esac
    printf '%s\n' $f | lfselect
}}

cmd extract ${{
    printf '\e[?1049h\e[H'
    aunpack -De -- $fx || { read -p 'Press enter to continue'; exit ;}
    printf '%s\n' ${f%.*} | lfselect
}}

cmd paste ${{
    printf '\e[?1049h\e[H'
    list=~/.local/share/lf/files
    mode=$(head -n1 $list)
    srcs=$(sed 1d $list)
    tput civis
    case $mode/${1:-adv} in
        copy/adv) advcp -ag --backup=numbered -- ${srcs:?} . ;;
        move/adv) advmv  -g --backup=numbered -- ${srcs:?} . ;;
        copy/simple) cp -av --backup=numbered -- ${srcs:?} . ;;
        move/simple) mv  -v --backup=numbered -- ${srcs:?} . ;;
    esac || { read -p 'Press enter to continue'; exit ;}
    rm $list
    lf -remote 'send clear'
    lf -remote 'send load'
    tput cnorm
}}

cmd center &{{
    n=$(stty size </dev/"$(ps -o tty= -p $$)" | cut -d' ' -f1)
    lf -remote "send set scrolloff $(( (n - 3) / 2 ))"
    lf -remote 'send push jk:scrolloff<enter>'
}}

# vim:ft=conf
