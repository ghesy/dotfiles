#!/bin/sh

# config
new_connection_display_minutes=5

main() {
    echo 
    pidof -q NetworkManager || return
    get_vars
    no_connections && echo  && return
    if no_internet; then
        echo x
    elif is_vpn_on; then
        echo 
    elif is_tor_on; then
        echo 
    else
        echo 
    fi
    net_recently_changed && print_net_type
}

print_net_type() {
    is_metered && echo ﰒ
    case $type in
        *bluetooth*) echo  ;;
        *wireless*|*wifi*) echo 直; printf '%s\n' "$ssid" ;;
        *ethernet*) is_usb && echo 禍 || echo  ;;
        *) echo ? ;;
    esac
}

no_connections() {
    [ -z "$conns" ] && return 0
    prnt "$type" | grep -qE 'tun|vpn' && return 0
    return 1
}

no_internet() {
    nmcli -g general.ip4-connectivity dev show $dev | grep -vq full
}

is_vpn_on() {
    prnt "$conns" | cut -d: -f1 | grep -qE 'tun|vpn'
}

is_usb() {
    nmcli -g general.udi dev show $dev | grep -q '\<usb'
}

is_metered() {
    nmcli -g general.metered dev show $dev | grep -q yes
}

is_tor_on() {
    t=${XDG_RUNTIME_DIR:-/tmp}/dwmbar-tor
    pgrep -f '10.*icanhazip' >/dev/null ||
        sh -c "timeout 15 curl -s --socks5 localhost:9050 ping.archlinux.org &&
               echo >$t || :>$t" >/dev/null 2>&1 &
    [ -s $t ]
}

net_recently_changed() {
    state=$(prnt "$conns" | head -n1 | sha256sum)
    state_file=${XDG_RUNTIME_DIR:-/tmp}/dwmbar-net
    old_state=$(cat "$state_file" 2>/dev/null)

    if [ "$state" = "$old_state" ]; then
        state_recently_changed && return 0 || return 1
    else
        prnt "$state" >"$state_file"
        return 0
    fi
}

state_recently_changed() {
    [ -n "$(find "$state_file" -mmin -"$new_connection_display_minutes")" ]
}

get_vars() {
    conns=$(nmcli -g type,device,name conn show --active)
    type=$(prnt "$conns" | head -n1 | cut -d: -f1)
    dev=$(prnt "$conns"  | head -n1 | cut -d: -f2)
    ssid=$(prnt "$conns" | head -n1 | cut -d: -f3- | sed 's/\\:/:/g')
}

prnt() {
    printf '%s\n' "$*"
}

main "$@"
