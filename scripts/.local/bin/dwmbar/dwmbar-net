#!/bin/sh

# config
show_new_connection_time=120

main()
{
    echo 

    pidof -q NetworkManager || return 1
    get_vars
    no_connections && echo  && return

    if no_internet; then
        echo x
    elif is_vpn_on; then
        echo 
    else
        echo 
    fi

    net_recently_changed || return

    is_metered && echo ﰒ
    case $type in
        *bluetooth*) echo  ;;
        *wireless*|*wifi*) echo 直; printf '%s\n' "$ssid" ;;
        *ethernet*) is_usb && echo 禍 || echo  ;;
        *) echo ? ;;
    esac
}

no_connections()
{
    [ -z "$conns" ] && return 0
    prnt "$type" | grep -qE 'tun|vpn' && return 0
    return 1
}

no_internet()
{
    nmcli -g general.ip4-connectivity dev show $dev | grep -vq full
}

is_vpn_on()
{
    prnt "$conns" | cut -d: -f1 | grep -qE 'tun|vpn'
}

is_usb()
{
    nmcli -g general.udi dev show $dev | grep -q '\<usb'
}

is_metered()
{
    nmcli -g general.metered dev show $dev | grep -q yes
}

net_recently_changed()
{
    state_file="${XDG_RUNTIME_DIR:-/tmp}/dwmbar-net-state"
    state="$(prnt "$conns" | head -n1 | sha256sum)"
    old_state="$(cat "$state_file" 2>/dev/null)"

    if [ "$state" = "$old_state" ]
    then
        state_recently_changed && return 0 || return 1
    else
        prnt "$state" > "$state_file"
        return 0
    fi
}

state_recently_changed()
{
    [ $(state_file_age) -lt "$show_new_connection_time" ]
}

state_file_age()
{
    echo $(( $(date +%s) - $(stat -c%Y "$state_file") ))
}

get_vars()
{
    conns="$(nmcli -g type,device,name conn show --active)"
    type="$(prnt "$conns" | head -n1 | cut -d: -f1)"
    dev="$(prnt "$conns"  | head -n1 | cut -d: -f2)"
    ssid="$(prnt "$conns" | head -n1 | cut -d: -f3- | sed 's/\\:/:/g')"
}

prnt()
{
    printf '%s\n' "$*"
}

main "$@"
exit
