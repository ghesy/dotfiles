#!/bin/bash
# manage runit services using fzf.

# ==========
# = config
# ==========

user_active_svdir=~/.local/runit/run
user_inactive_svdir=~/.local/runit/sv

system_active_svdir=/run/runit/service
system_inactive_svdir=/etc/runit/sv

export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --ansi --height=100%"

# =================
# = end of config
# =================

main()
{
    set_mode user

    while :; do
        active_services=$($rsm -c yes | sed 1,2d)
        inactive_services=(
            $(
                comm -23 \
                    <(basename -a "$inactive_svdir"/*/) \
                    <(basename -a "$active_svdir"/*/) |
                    grep -v agetty-
            )
        )
        service=$(
            {
                echo Refresh
                echo Toggle Mode
                echo ---
                printf '%s\n' "$active_services"
                printf ' ï€‘ %s\n' "${inactive_services[@]}"
                echo ---
            } | fzf
        ) || break

        case $service in
            ---|Refresh|*' SERVICE '*) continue ;;
            'Toggle Mode') toggle_mode; continue ;;
        esac

        service=${service# ? *}
        service=${service%% *}
        [[ -z $service ]] && break

        action=$(
            printf 'Restart\nDown\nActivate\nDeactivate\nTrash\nShow Owner\nView\n' |
                fzf --prompt=Action:
        )
        case $action in
            Restart) restart ;;
            Down) down ;;
            Activate) activate ;;
            Deactivate) deactivate ;;
            Trash) trash ;;
            'Show Owner') owner ;;
            View) view ;;
            *) continue ;;
        esac
        read -p 'Press enter to continue '
    done
}

restart()
{
    activate
    $sv restart "$service"
}

down()
{
    [[ -e $active_svdir/$service ]] && $sv down "$service"
}

activate()
{
    src=$inactive_svdir/$service
    dest=$active_svdir/$service
    [[ -e $src ]] && [[ ! -e $dest ]] && $ln -sT "$src" "$dest"
}

deactivate()
{
    down
    $rm -f "${active_svdir:?}/${service:?}"
    $rm -rf "${inactive_svdir:?}/${service:?}/supervise"
}

trash()
{
    ask 'Trash the service?' || return
    deactivate
    sudo trash-put "$inactive_svdir/$service"
}

owner()
{
    pacman -Qo "$inactive_svdir/$service" 2>&1 | ${PAGER:-less}
}

view()
{
    find "$inactive_svdir/$service" -maxdepth 1 -type f \
        -exec ${EDITOR:-nvim} '{}' +
}

ask()
{
    ans=$(printf 'No\nYes\n' | fzf --prompt="$*")
    [[ $ans = Yes ]] && return 0 || return 1
}

toggle_mode()
{
    case $mode in
        user) set_mode system ;;
        system) set_mode user ;;
    esac
}

set_mode()
{
    case $1 in
        user)
            mode=user
            active_svdir=$user_active_svdir
            inactive_svdir=$user_inactive_svdir
            sv='usv'
            rsm='ursm'
            ln='ln'
            rm='rm'
        ;;
        system)
            mode=system
            active_svdir=$system_active_svdir
            inactive_svdir=$system_inactive_svdir
            sv='sudo sv'
            rsm='sudo rsm'
            ln='sudo ln'
            rm='sudo rm'
        ;;
    esac
}

main "$@"
