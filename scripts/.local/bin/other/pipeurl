#!/bin/sh
# extract and open URLs from the contents of stdin.
# option -c: take the next thing that is copied to clipboad as a url and open it
# requires dmenu, xurls, clipnotify, xclip, libnotify,
# mpv(+youtube-dl), curl, moreutils, gallery-dl, and tuir(optional).

# config
cache=~/.cache/gallery-dl

if [ "$1" = -c ]; then
    [ "$FLOCKER" != "$(realpath -- "$0")" ] &&
        exec env FLOCKER="$(realpath -- "$0")" flock -en "$0" "$0" "$@"
    shift
    notify-send -u low PipeURL 'Listening to Clipboard...'
    clip=$(timeout 30s sh -c '
        while :; do
            echo PipeURL | xclip -selection clipboard || exit 1
            clipnotify || exit 1
            clip=$(xclip -o -selection clipboard)
            [ "$clip" = PipeURL ] && continue
            printf '%s\n' "$clip"
            break
        done
    ') || exit 1
    set -- "${clip:?}"
fi

[ -n "$1" ] && url="$(printf '%s\n' "$1" | xurls | head -n1)" || url="$(
    xurls | sort -u | ifne dmenu -p 'Select URL' -l 10 ${WINDOWID:+-w $WINDOWID}
)"

[ -z "$url" ] && exit
[ -n "$clip" ] && notify-send PipeURL 'Got it.'

stream() {
    notify-send -u low PipeURL 'Opening Video...'
    if timeout 10 curl -fsIL -- "$@" >/dev/null; then
        mpv -quiet -- "$@"
    else
        proxychains -q mpv -quiet -- "$@"
    fi || notify-send PipeURL 'Failed to open the Video.'
}

gdl() {
    imgs=$(gallery-dl -d "$cache" -- "$@" 2>/dev/null) ||
        imgs=$(proxychains -q gallery-dl -d "$cache" -- "$@" 2>/dev/null) ||
        return 1
    printf '%s\n' "$imgs" | sed 's/^# //' |
        xargs -d'\n' sh -c 'sxiv -a -- "$@" || mpv -- "$@"' ''
}

a2() {
    $p aria2c -q -x10 -s10 -k1M -m1 --no-conf ${p:+--async-dns=false} \
        -d"$cache" -o"$2" -- "$1"
}

dl() {
    file=$(printf '%s\n' "$1" | md5sum | cut -d' ' -f1)
    if [ ! -r "$cache/$file" ]; then
        p='' a2 "$1" "$file" || p='proxychains -q' a2 "$1" "$file" || return 1
    fi
    xdg-open "$cache/$file"
}

case "$url" in
    *reddit.com/gallery*|*i.redd.it*|*imgur.com*)
        gdl "$url" ;;

    *mkv|*webm|*mp4|*youtube.com/watch*|*youtube.com/playlist*|\
    *youtube.com/embed/*|*youtu.be*|*hooktube.com*|*bitchute.com*|\
    *odysee.com*|*v.redd*|*streamwo.com*|*streamable.com*)
        stream "$url" ;;

    *pdf|*cbz|*cbr|*mp3|*flac|*opus|*mp3?source*)
        dl "$url" ;;

    *reddit.com*|*redd.it*)
        setsid -f $TERMINAL -e tuir -- "$url" >/dev/null 2>&1 ;;

    *)
        gdl "$url" && exit 0

        if curl -fsLr0-0 -- "$url" | grep -q 'content="PeerTube"'; then
            stream "$url"
            exit 0
        fi

        action="$(
            printf 'Open\nCopy\nDownload\nStream\n' |
                dmenu  -p 'Do What?' ${WINDOWID:+-w $WINDOWID}
        )" || exit 0

        case "$action" in
            Download) dl "$url" ;;
            Stream) stream "$url" ;;
            Copy) printf %s "$url" | xclip -r -selection clipboard ;;
            Open) xdg-open "$url" ;;
        esac
    ;;
esac
