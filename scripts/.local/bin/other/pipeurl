#!/bin/sh
# extract and open URLs from the contents of stdin.
# requires dmenu, xurls, libnotify, mpv (+youtube-dl), aria2,
# moreutils, gallery-dl, and tuir (for reading reddit posts).

# config
cache=~/.cache/gallery-dl

main() {
    [ -n "$1" ] && url="$(printf '%s\n' "$1" | xurls | head -n1)" ||
        url="$(xurls | sort -u | ifne dmenu -p 'Select URL' -l 10 ${WINDOWID:+-w $WINDOWID})"
    [ -z "$url" ] && exit

    case $url in
        *reddit.com/gallery*|*i.redd.it*|*imgur.com*) gdl ;;
        *reddit.com*|*redd.ir*) tuir -- "$url" ;;
        *.pdf|*.cbz|*.cbr) dl ;;

        *.mp4|*.webm|*.mkv|*.mp3|*.flac|*.opus|*youtube.com/watch*|\
        *youtube.com/playlist*|*youtube.com/embed/*|*youtu.be/*|*hooktube.com/*|\
        *bitchute.com/*|*odysee.com/*|*v.redd*|*streamwo.com/*|*streamable.com/*|\
        *streamja.com/*|*videos.lukesmith.xyz/*)
            video ;;

        *) $BROWSER "$url" ;;
    esac
}

video() {
    case $(printf 'Stream\nDownload\n' | dmenu ${WINDOWID:+-w $WINDOWID}) in
        Download) setsid -f $TERMINAL -e ytdl "$url" >/dev/null 2>&1 ;;
        Stream)
            notify-send -u low PipeURL 'Opening Video...'
            $(getproxy "$url") mpv -quiet -- "$url" ||
                notify-send PipeURL 'Failed to open the Video.' ;;
    esac
}

gdl() {
    imgs=$($(getproxy "$url") gallery-dl -d "$cache" -- "$url" 2>/dev/null) || return 1
    printf '%s\n' "$imgs" | sed 's/^# //' | xargs -d'\n' sh -c 'sxiv -a -- "$url" || mpv -quiet -- "$url"' ''
}

dl() {
    file=$(printf '%s\n' "$url" | md5sum | cut -d' ' -f1)
    if [ ! -r "$cache/$file" ]; then
        $(getproxy "$url") aria2c -q -x10 -s10 -k1M -m1 --no-conf \
            ${p:+--async-dns=false} -d"$cache" -o"$file" -- "$url" || return 1
    fi
    xdg-open "$cache/$file"
}

main "$@"
