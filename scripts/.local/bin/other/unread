#!/bin/bash
# login to mutt's email accounts and notify the unread emails.
# requires python3 and libnotify.

# config
mutt_accounts_dir=~/.local/share/neomutt/accounts

main()
{
    one_instance

    notify-send -u low 'Fetching Emails...'

    # loop over email account config files
    for file in "${mutt_accounts_dir:?}"/*; do
        [[ -f $file ]] && notify_unread "$file"
    done
}

notify_unread()
{
    local file=$1
    local imap_user folder password host port count msg

    # get the variables "imap_user" and "folder" from the neomutt account file
    eval "$(
        grep -E '^set.*(imap_user|folder).*=' "${file:?}" |
            sed -E 's/set\s+(\w+)\s*=\s*("?)(\S+)\2/\1="\3"/'
    )"

    # get the imap password from the neomutt account file
    password=$(eval "$(grep '`.*pass ' "$file" | cut -d'`' -f2)") || {
        notify-send 'Unread' "Failed to get the password for ${1##*/}."
        exit 1
    }
    password=$(printf '%s\n' "$password" | head -n1)

    port=${folder##*:}
    host=${folder##*//}; host=${host##*@}; host=${host%:*}

    if count=$(get_unread_count "$host" "$port" "$imap_user" "$password") \
        && [[ -n $count ]]
    then
        msg="$count Unread."
    else
        msg="Failed."
    fi

    notify-send -t 30000 -u low "ï›­ ${1##*/}" "$msg"
}

get_unread_count()
{
python3 -c "
import sys, imaplib
host = sys.argv[1]
port = sys.argv[2]
username = sys.argv[3]
password = sys.argv[4]
imap = imaplib.IMAP4_SSL(host, port)
imap.login(username, password)
imap.select('inbox')
status, response = imap.search(None, 'unseen')
list = response[0].split()
print(len(list))
" "$@"
}

# make sure only one instance of this script runs, using flock(1).
one_instance()
{
    [[ $FLOCKER != $(realpath -- "$0") ]] &&
        exec env FLOCKER="$(realpath -- "$0")" flock -en "$0" "$0" "$@"
}

main "$@"
