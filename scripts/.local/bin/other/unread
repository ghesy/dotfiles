#!/bin/bash
# login to mutt's email accounts and notify the unread emails.
# requires curl and python.

# config
mutt_accounts_dir=~/.local/share/neomutt/accounts

# make sure only one instance of this script runs, using flock(1).
[ "$FLOCKER" != "$(realpath -- "$0")" ] &&
    exec env FLOCKER="$(realpath -- "$0")" flock -en "$0" "$0" "$@"

# decode utf8-encoded email subjects
utf8() {
python -c "import sys,email.header
def decode(s): return ''.join(w.decode(e or 'utf8') if isinstance(w,bytes) else w
for w,e in email.header.decode_header(s))
print(decode(sys.stdin.read()))"
}

unread()
{
    unset imap_user pass folder ids count last_subject

    # get the variables 'imap_user', 'folder' and imap's password
    # from the neomutt account file
    eval "$(grep -E '^set.*(imap_user|folder).*=' "${1:?}" |
        sed -E 's/set\s+(\S+)\s*=\s*(\S+)/\1=\2/')"
    pass=$(eval "$(grep '`.*pass ' "$1" | cut -d'`' -f2)" | head -n1) || return 1

    # use curl to get the mails from the imap server
    c() { curl -fsSLX"$1" "${folder:?}/INBOX" --connect-timeout 10 -K- <<< "-u${imap_user:?}:${pass:?}" ;}
    if ids=$(c 'FETCH 1:* (UID FLAGS)'); then
        ids=$(echo "$ids" | grep -v Seen | cut -d' ' -f5)
        count=$(printf "%s${ids:+\n}" "$ids" | wc -l)
        if [ "$count" -gt 0 ]; then
            last_subject=$(c "UID FETCH $(echo "$ids" | tail -n1) (ENVELOPE)" |
                cut -d\" -f4- | grep -Po '^.*?[^\\](?=")' | utf8)
        fi
        notif="Unread Count: $count${last_subject:+$'\n'Last Subject:$'\n'$last_subject}"
    else
        notif='Failed.'
    fi
    notify-send -t 30000 -u low "ï›­ $(basename "$1")" "$notif"
}

notify-send -u low 'Fetching Emails...'
for f in "${mutt_accounts_dir:?}"/*; do
    [ -f "$f" ] && unread "$f"
done
