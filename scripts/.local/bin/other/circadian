#!/bin/sh

# ==========
# = Config
# ==========

# perform the idle action after this much time of system being idle
timeout_min=10

# collective network bandwidth usage threshold
net_threshold_kbps=20

# cpu usage threshold
cpu_usage_threshold=22

# system idle checking interval
check_interval_sec=30

# actions to perform when system is deemed idle
idle_action() { sysact sleep ;}

# =================
# = End of Config
# =================

main()
{
    check_deps || return 1
    trap 'kill 0' EXIT
    last_activity=$(now)
    while true; do
        sleep $check_interval_sec
        if is_system_idle; then
            has_timeout_reached && last_activity=$(now) && idle_action
        else
            last_activity=$(now)
        fi
    done
}

now()
{
    date +%s
}

has_timeout_reached()
{
    [ $(( $(now) - last_activity )) -gt $(( timeout_min * 60 )) ]
}

is_system_idle()
{
    is_nothing_playing	|| { echo playing media detected.;		return 1 ;} &&
    is_net_idle			|| { echo network activity detected.;	return 1 ;} &&
    is_ssh_inactive		|| { echo ssh activity detected.;		return 1 ;} &&
    is_cpu_idle			|| { echo high cpu activity detected.;	return 1 ;} &&
    echo system is idle.
}

is_ssh_inactive()
{
    ! pgrep -P "$(pgrep -o sshd)" >/dev/null 2>&1
}

is_cpu_idle()
{
    load="$(top -bn3 | awk '/%Cpu/ {sum+=100-$8; count++} END{printf "%u\n", sum/count}')"
    prog="$(top -bn1 | awk 'FNR==8 {print $NF" ("$9"%)"}')"
    echo cpu load: "$load"
    echo top prog: "$prog"
    [ "$load" -le "$cpu_usage_threshold" ]
}

is_net_idle()
{
    [ "$(net_speed)" -le "$net_threshold_kbps" ]
}

net_speed()
{
    s1=$(net_sample 1)
    sleep 1
    s2=$(net_sample 2)
    echo $(( (s2 - s1) / 1024 ))
}

net_sample()
{
    awk -v n=$1 '/:/ && !/lo/ && !/tun/ {s+=$2+$10} END{print s}' /proc/net/dev
}

is_nothing_playing()
{
    ! playerctl -a status | grep -iq playing
}

check_deps()
{
    for prog in playerctl xprintidle; do
        command -v $prog >/dev/null || {
            echo dependency not installed: $prog >&2
            return 1
        }
    done
}

main "$@"
exit
