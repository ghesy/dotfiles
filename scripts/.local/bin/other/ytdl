#!/bin/bash
# download videos using yt-dlp and aria2.

main() {
    [ -f "${1:?}" ] && return 1
    cd /media/downloads || cd ~/Downloads || cd ~ || return 1

    ask_res

    # temp dir for storing interim files
    TMP=.ytdl-tmp
    trap 'rmdir $TMP 2>/dev/null' EXIT

    ntotal=$#
    FAILED=()
    SUCCEEDED=()

    download_all "$@"
    summary_end
}

ask_res() {
    # ask the user what resolution to download
    read -rp 'Enter resolution [ 480 (Default) / 720 / ... / b (Best) / a (Audio) / q (Quit) ]: ' res
    unset fmt name
    case $res in
        q) exit ;;
        b) res='' name=Best ;;
        a) res='' fmt=bestaudio name=Audio ;;
        '') res=480 ;;
        *) [ "$res" -eq "$res" ] || res=480 ;;
    esac
    echo "[ytdl] ${name:-$res} selected."

    gen_opts
}

gen_opts() {
    # try not to go below res/2+res/8, unless no higher res is available
    minres=$((${res:-480}/2+${res:-480}/8))

    # the options that are passed to yt-dlp
    OPTS=(
        -S "${res:++}res${res:+:$res},codec,abr~$((${res:-1800}/6))"
        -f "${fmt:-bestvideo[height>=$minres]+bestaudio/bestvideo+bestaudio/best[height>=$minres]/best}"
        --no-mtime --add-metadata --embed-thumbnail --sub-lang=en --write-sub
        --write-auto-sub --embed-subs --compat-option no-keep-subs --downloader aria2c
        --downloader-args aria2c:'--async-dns=false --lowest-speed-limit=5K'
    )
}

download_all() {
    # try to download each video up to 10 times
    for URL; do
        URL=${URL#ytdl://}
        TITLE=$(get_title)
        echo "[ytdl] Downloading \"$TITLE\" ($URL)"
        for i in {1..10}; do
            if download; then
                report_success
                break
            elif [ $i -eq 10 ]; then
                report_failure
                break
            fi
            sleep 30
            echo "[ytdl] Attempt $((i+1)) of 10 to download \"$TITLE\" ($URL)"
        done
    done
}

download() {
    $(getproxy "$URL") yt-dlp "${OPTS[@]}" -P temp:$TMP "$URL"
}

get_title() {
    $(getproxy "$URL") yt-dlp --print title "$URL"
}

report_success() {
    notify-send ytdl Done:$'\n'"$TITLE"
    SUCCEEDED+=("$TITLE -- $URL")
    summary
}

report_failure() {
    notify-send ytdl Failed:$'\n'"$TITLE"
    FAILED+=("$TITLE -- $URL")
    summary
}

summary() {
    left=$(( ntotal - ( ${#SUCCEEDED[@]} + ${#FAILED[@]} ) ))
    echo "[ytdl] $left Left, ${#SUCCEEDED[@]} Done, ${#FAILED[@]} Failed out of $ntotal"
}

summary_end() {
    # report a summary
    [ $ntotal -le 1 ] && exit
    echo
    echo "[ytdl] Summary: $ntotal Total Downloads, ${#FAILED[@]} Failed."
    [ ${#FAILED[@]} -lt 1 ] && exit
    echo 'Failed Downloads:'
    printf '- %s\n' "${FAILED[@]}"
}

main "$@"
