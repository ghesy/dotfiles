#!/bin/sh
# this script downloads or streams internet videos.
# if it's given a censored link and my vpn is off, it uses tor.
# requires youtube-dl, mpv, fzf, dmenu and torsocks.

# config
ask_format_regex='youtube\.com/(watch|playlist)|youtu\.be/'
blocked_urls_regex='youtube\.com/(watch|playlist)|youtu\.be/'
default_format='best[height<=480]/bestvideo[height<=480]+bestaudio/best/bestvideo+bestaudio'
home_country="${HOME_COUNTRY:-ir}"

main()
{
    case "$1" in
        -o|-s) shift; fn=open ;;
        -d) shift; fn=download ;;
        *) fn="$(ask_fn)" || return 1 ;;
    esac
    [ -z "$*" ] && die no links given
    $fn "$@"
}

ask_fn()
{
    printf 'open\ndownload\n' | menu
}

open()
{
    format="$(get_format "$@")" || return 1
    tor="$(get_tor "$@")"
    $tor mpv ${format:+--ytdl-format="$format"} -- "$@" ||
        notify-send ytdl 'failed opening the video.'
}

download()
{
    format="$(ask_format "$@")" || return 1
    tor="$(get_tor "$@")"
    $tor youtube-dl ${format:+-f "$format"} -- "$@"
}

get_format()
{
    if should_ask_format "$@"; then
        ask_format "$@"
    else
        prnt "$default_format"
    fi

}

ask_format()
{
    res="$(print_res_list | menu 'quality: ')" || return 1
    res_to_format "$res"
}

menu()
{
    output_is_attached_to_terminal && cmd='fzf --prompt' || cmd='dmenu -p'
    $cmd "$*"
}

print_res_list()
{
    printf '1080p\n720p\n480p\n360p\nbest\naudio\n'
}

res_to_format()
{
    res="$(prnt $1 | tr -d p)"
    if is_number "$res"; then
        prnt "bestvideo[height<=$res]+bestaudio/best[height<=$res]"
    else
        prnt "$@" | sed -e 's/^best$/bestvideo+bestaudio\/best/' \
                        -e 's/^audio$/bestaudio/'
    fi
}

get_tor()
{
    vpn_off && link_blocked "$@" && echo torsocks
}

vpn_off()
{
    command -v country >/dev/null && [ "$(country)" = "$home_country" ]
}

link_blocked()
{
    prnt "$@" | grep -qE "$blocked_urls_regex"
}

should_ask_format()
{
    prnt "$1" | grep -qE "$ask_format_regex"
}

output_is_attached_to_terminal()
{
    [ -t 2 ]
}

is_number()
{
    [ "$1" -eq "$1" ] 2>/dev/null
}

die()
{
    prnt "ytdl: $*" >&2
    exit 1
}

prnt()
{
    printf '%s\n' "$*"
}

main "$@"
exit
