#!/bin/sh
# soystemd 2021-04-10 (https://github.com/soystemd)
# sets a video or gif as your wallpaper.
# requires mpv, xwinwrap and xrandr.
# to kill the live wallpaper, just run this with no arguments.
#
# example:
#   $ live video.mp4
#
# for killing:
#   $ live

# config
pid="${XDG_RUNTIME_DIR:-/tmp}/live.pid"
mpv_args='
--fullscreen
--loop-file
--no-audio
--sid=no
--no-osc
--no-osd-bar
--no-input-default-bindings
--no-stop-screensaver
--load-scripts=no
--no-terminal
-wid WID
'

main()
{
    [ -z "$*" ] && kill_other_instances && exit
    wallpaper="$1"
    error_checks
    fork "$@"
    manage_instances
    set_wallpaper_all_displays
}

set_wallpaper_all_displays()
{
    for display_geometry in $(get_display_geometries); do
        set_wallpaper &
    done
    wait
}

set_wallpaper()
{
    xwinwrap -ov -ni -g "$display_geometry" -- \
        mpv $(mpv_args) "$wallpaper" >/dev/null 2>&1
}

get_display_geometries()
{
    xrandr -q | grep ' connected' |
        grep --only-matching --perl-regexp '\d+x\d+\+\d+\+\d+'
}

mpv_wid()
{
    wid="$1"
    shift
    mpv $(mpv_args) --wid="$wid" "$@"
}

mpv_args()
{
    printf '%s\n' "$mpv_args" | tr '\n' ' '
}

manage_instances()
{
    kill_other_instances
    echo $$ > "$pid" || exit 1
    trap exit USR1
    trap "rm '$pid'; kill 0" EXIT
}

kill_other_instances()
{
    [ -r "$pid" ] && kill -USR1 "$(cat "$pid")" ||
        echo no other instances running. >&2
    return 0
}

fork()
{
    [ "$FORKED" = true ] && return
    export FORKED=true
    setsid -f "$0" "$@" >/dev/null 2>&1
    exit
}

error_checks()
{
    [ ! -r "$wallpaper" ] && die "cannot read file: $wallpaper"
    [ -z "$DISPLAY" ] && die "no display detected"
    check_deps xrandr xwinwrap mpv
}

check_deps()
{
    for prog in "$@"; do
        command -v $prog >/dev/null || {
            die dependency not installed: $prog
            return 1
        }
    done
}

die()
{
    printf '%s\n' "live: $*" >&2
    exit 1
}

main "$@"
exit
