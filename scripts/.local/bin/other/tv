#!/bin/bash
# see release date of TV show episodes.
# requires 'episoder' from the AUR, and 'fzf'.
#
# options:
# -a: search and add new shows.
# -r: select and remove added shows.
# -l: list added shows.
# -e: export the list of added shows to ~/.local/share/tv/shows.
# -i: import shows from ~/.local/share/tv/shows.

dbdir=~/.local/share/tv-db
shows=~/.local/share/tv/shows

conf="dateformat=%F
format=%airdate - %show - %seasonx%epnum - %eptitle"

main() {
    case $1 in
    -h)
        print_help ;;
    -s)
        echo updating the database...
        episoder update -d90
        episoder list -i | tac | ${PAGER:-less} ;;
    -l)
        list_show_names | ${PAGER:-less} ;;
    -e)
        export_show_list ;;
    -i)
        cut -f2 "${shows:?}" | while IFS= read -r show; do
            echo importing "$show"...
            episoder add "$show"
        done
        echo updating the database...
        episoder update -d90 ;;
    -a)
        cmd="episoder search {q} | grep '^[0-9]'"
        printf '\033[5 q' # change the cursor to a line
        show=$(:|fzf --disabled --bind="change:reload:$cmd" \
            --prompt 'Search for a show to add: ') &&
            episoder add "${show%%$'\t'*}" && episoder update -d90 &&
            export_show_list ;;
    -r)
        printf '\033[5 q' # change the cursor to a line
        print_show_list | fzf --prompt 'Show(s) to remove: ' | cut -f1 |
            while IFS= read -r show; do
                echo removing "$show"...
                episoder remove "$show"
            done ;;
    '')
        printf '\e[?1049h\e[2J\e[H'
        while :; do
            printf '\e[H'
            echo 's: Show upcoming shows    l: List added shows'
            echo 'a: Add new shows          r: Remove shows'
            echo 'q: Quit'
            printf '‚îÅ%.0s' {1..45}; echo
            printf 'Command: '
            printf '\e[s'
            read x
            printf '\e[u\e[0J\e[1E'
            case $x in
                q) break ;;
                s|l|a|r) main -$x ;;
            esac
            printf '\e[?1049h'
        done
        printf '\e[?1049l'
        ;;
    *)
        episoder "$@" ;;
    esac
}

episoder() {
    mkdir -p "${dbdir:?}" &&
        HOME=${dbdir:?} command episoder -c <(printf '%s\n' "${conf:?}") "$@"
}

list_show_nums() {
    episoder shows | grep -Po '^\[\s*\K\d+'
}

list_show_ids() {
    episoder shows | grep -Po '^\[\s*\d+] \K\S+'
}

list_show_names() {
    episoder shows | grep -E '(, \S+){2}' | rev |
        cut -d, -f3- | awk '{$1=$1};1' | rev
}

print_show_list() {
    paste <(list_show_nums) <(list_show_ids) <(list_show_names)
}

export_show_list() {
    mkdir -p "$(dirname "${shows:?}")" && print_show_list > "${shows:?}"
}

print_help() {
cat << 'eof'
run without any arguments: run the tui.
run with options/arguments not listed here: pass all args to episoder.
options:
-s  show list of upcoming shows
-a  search and add new shows
-r  select and remove added shows
-l  list added shows
-e  export the list of added shows to ~/.local/share/tv/shows
-i  import shows from ~/.local/share/tv/shows
eof
}

main "$@"
