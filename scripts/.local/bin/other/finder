#!/bin/sh
# search for files and directories.
# instead of recursing, it increments the depth of search,
# which on average finds the stuff you want much faster.
# max search depth can be increased/decreased mid-run with ctrl-n and ctrl-p.
# requires find(1) and fzf(1).

# initial maximum depth
max_depth=6

main()
{
    # make fzf fullscreen if -f is supplied
    [ "$1" = -f ] && shift && height='--height=100%'

    while true; do
        out="$(dfind "${@:-.}" | fzffn)"
        query="$(printf '%s\n' "$out" | head -n1)" # the searched string
        file="$(printf '%s\n' "$out" | tail -n1)"  # the selected file in fzf
        key="$(printf '%s\n' "$out" | sed '2q;d')" # the keypress received by fzf

        [ -z "$out" ] && return 1

        case "$key" in
            ctrl-n) max_depth=$((max_depth + 1)) ;;
            ctrl-p) max_depth=$((max_depth - 1)) ;;
            '') echo "$file"; return ;;
        esac

        [ "$max_depth" -lt 1  ] && max_depth=1
        [ "$max_depth" -gt 30 ] && max_depth=30
    done
}

dfind()
{
    for d in $(seq 1 $max_depth); do
        findfn "$@" &
    done
    wait
}

findfn()
{
    find -L "$@" \
      -mindepth $d \
      -maxdepth $d \
      -not -path '*/*vim/undo*/*' \
      -not -path '*/Trash/*' \
      -not -path '*/\.git/*' \
      -not -name '.git' \
      2>/dev/null
}

fzffn()
{
    fzf \
      --header "Depth = $max_depth" \
      --expect ctrl-n,ctrl-p \
      --query "$query" \
      --print-query \
      $height
}

out()
{
    printf '%s\n' "$out"
}

main "$@"
