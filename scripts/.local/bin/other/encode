#!/bin/sh
# (re)encodes videos to x265/vp9/av1 using ffmpeg.
# usage: encode FILE...

# safely make a fifo
d=$(mktemp -d)
trap exit INT TERM
trap 'rm -r "$d"' EXIT
fifo=$d/fifo
mkfifo "$fifo" | exit 1

if 2>/dev/null test "${1:?}" -eq "${1:?}"; then
    crf=${1:?}
    shift
else
    crf=25
fi

# loop over all given files and (re)encode them
for f; do
    if [ -f "${f%.*}.x265.mkv" ] 2>/dev/null; then
        echo video already converted: "$f"
        continue
    fi

    frame_count=$(ffprobe -v error -select_streams v:0 -count_packets \
        -show_entries stream=nb_read_packets -of csv=p=0 "$f")

    while IFS= read -r info; do
        case $info in frame=*)
            set -- ${info#*=}
            p=$(echo "scale=2; $1*100/$frame_count" | bc)
            printf '\033[2K\r%s%%  %s  ' "$p" "${f##*/}" ;;
        esac
    done <"$fifo" &

    ffmpeg -nostdin -hide_banner -loglevel error -progress pipe:1 -y -i "$f" \
        -c:v libx265 -crf $crf -preset slow -x265-params log-level=error \
        -c:a libopus -ac 2 "${f%.*}.x265.TMP.mkv" >"$fifo" &&
        mv -n "${f%.*}.x265.TMP.mkv" "${f%.*}.x265.mkv"
    echo Done.
done
