# backup the original config files before package install and
# restore them after package deletion.
# also add the nodelay option to pam config files.

# list of files to backup and restore
files=(
    /etc/security/faillock.conf
)

# configure pam
pam=/etc/pam.d/system-auth
post_install() {
    tmp=$(mktemp) || return 1
    awk '
        $1 == "auth" && $0 ~ /\spam_(unix|faillock)\.so\s/ && $0 !~ /\snodelay/ {
            print $0 " nodelay"
            next
        }
        { print }
    ' "$pam" > "$tmp" || return 1
    mv -vf "$tmp" "$pam"
    chmod 644 "$pam"
}
post_remove_pam() {
    tmp=$(mktemp) || return 1
    awk '
        $1 == "auth" && $0 ~ /\spam_(unix|faillock)\.so\s/ && $0 ~ /\snodelay/ {
            gsub("\\snodelay", "")
            print
            next
        }
        { print }
    ' "$pam" > "$tmp" || return 1
    mv -vf "$tmp" "$pam"
    chmod 644 "$pam"
}

# implementation
dir=/var/lib/confbackup
install -dm700 "$dir"
pre_install() {
    for f in "${files[@]}"; do
        [[ ! -f $f ]] && continue
        mkdir -p "${dir}${f%/*}"
        mv -vn "$f" "${dir}${f}"
    done
}
post_remove_restore() {
    for f in "${files[@]}"; do
        [[ -f ${dir}${f} ]] && mv -vf "${dir}${f}" "$f"
    done
    cd "$dir" || return 1
    dirs=("${files[@]%/*}")
    rmdir -p --ignore-fail-on-non-empty "${dirs[@]#/}"
}

post_remove() {
    post_remove_pam
    post_remove_restore
}
