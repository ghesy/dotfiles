#!/bin/bash
# /usr/bin/lowbattery
# send warning notifications and eventually hibernate the system on low battery.

# this function sends a notification to all running X sessions of the system.
notif() {
    for pid in $(pstree -Tlp | grep -EA2 '\<Xorg\>' | grep -Po '(\K\d+(?=))'); do
        unset DISPLAY XAUTHORITY
        while IFS= read -r -d $'\0' env; do
            case ${env%%=*} in
                DISPLAY|XAUTHORITY) eval "$env" ;;
            esac
        done < /proc/"$pid"/environ
        [[ -z $DISPLAY ]] && continue
        export DISPLAY XAUTHORITY
        read -r user group < <(ps -o user=,group= -p "$pid")
        runuser -u "$user" -g "$group" -- \
            notify-send -u critical 'Battery Low!' 'System will hibernate on 5% battery.'
    done
}

# sleep using the internal read command
exec {sleepfd}<> <(:)
rsleep() { read -t $1 -u $sleepfd ;}

# check the battery level every two minutes
while :; do
    rsleep 120
    for b in /sys/class/power_supply/BAT*; do
        [[ -d $b ]] && [[ $(<"$b"/status) != Charging ]] &&
            case $(<"$b"/capacity) in
                [6-9]) notif ;;
                [0-5]) loginctl hibernate ;;
            esac
    done
done
